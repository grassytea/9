def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var13 = func4(arg9, var7)
        var14 = -129291886 | var7 - arg2 - 515
        var15 = (var13 + arg9) & arg2 | arg8
        var16 = var7 & arg2
        if arg1 < var14:
            var17 = (arg2 + var15) | (arg1 + 445127037)
        else:
            var17 = var14 | (var16 & arg2 ^ var14)
        var18 = var15 | 1215822592 ^ 446 ^ arg8
        var19 = var18 ^ var15 | arg9 | var18
        var20 = var13 + var18
        if arg9 < var20:
            var21 = var7 - -1877577309
        else:
            var21 = var15 - 1672924198
        var22 = arg8 ^ arg2 - var16 - arg2
        var23 = (var14 & var13) + var22 | var13
        var24 = ((var22 ^ var23) ^ var20) & var16
        var25 = var18 | arg8 - var18 & var7
        if var7 < var20:
            var26 = -155332226 & var7
        else:
            var26 = (var13 ^ arg8 ^ var18) - arg8
        var27 = var23 | arg8 ^ var15 + var20
        var28 = ((var23 & var27) - var25) - var27
        var29 = var13 | arg8
        var30 = (var27 & var18 - arg1) ^ var20
        var31 = arg1 + arg2
        if var14 < var24:
            var32 = var13 ^ var22
        else:
            var32 = var29 ^ var13
        if var24 < var23:
            var33 = ((arg1 | var18) | var29) - arg9
        else:
            var33 = ((var30 & arg8) + var16) - var30
        result = (var28 & var18 + ((((var7 & (-1349804175 ^ var22 - var23 - var13) ^ arg2) & var19) | arg1) ^ 81)) ^ var27
        return result
    var34 = func3(var7, arg2)
    if var34 < var7:
        var39 = class6()
    else:
        var39 = class8()
    for var40 in xrange(39):
        var39.func7(arg1, var34)
    var45 = func10(arg2, arg1)
    var46 = (207 & arg2) | arg1 - -1808812038
    var47 = var46 + var45 + 720
    var48 = var47 - 565855833 & var7 - var47
    var49 = -1669180389 & var48
    var50 = (var45 ^ var34) ^ var34 ^ var47
    var51 = -1834561313 & (arg2 | arg1)
    var52 = var50 ^ var45
    var53 = var47 + var52 | var48 ^ -543011865
    var54 = (-1933068602 | var46 | var52) & var47
    var55 = var48 + 694193733
    var56 = var46 + var45
    var57 = arg2 + var46
    var58 = var54 | var47
    var59 = var45 + var49
    if var45 < var46:
        var60 = -2105542661 + var7 + (var51 | var51)
    else:
        var60 = var34 ^ var58
    var61 = var56 | var48 | (-1941313459 + var47)
    var62 = var50 & var49 | (var47 + var46)
    var63 = var50 - var54
    var64 = (var62 | arg1 ^ -607) ^ var53
    var65 = var63 ^ arg1
    var66 = var47 & (var34 + var50) | var61
    var67 = arg2 ^ var50
    var68 = var56 & -1914943358
    var69 = var56 & var7
    if var53 < var50:
        var70 = var69 ^ (var68 | var34 - var49)
    else:
        var70 = var46 + (arg2 - var56) | var63
    result = var47 - (var50 - (var45 | var64 ^ (var65 + var62 + (var52 - var58 + arg2 - var57)))) & var7 & arg1
    return result
def func10(arg41, arg42):
    var43 = 0
    for var44 in range(24):
        var43 += (-9 & var43) ^ arg41
    return var43
class class8(object):
    def func7(self, arg37, arg38):
        return 0
class class6(class8):
    def func7(self, arg35, arg36):
        result = ((-1 + arg36) + arg35 | 780487421 - -1339559079 & 2072835128) ^ -1
        return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(41):
        var5 += (arg3 + var5) + var5
    return var5
def func4(arg10, arg11):
    closure = [0]
    def func5(acc, rest):
        var12 = 7 | (rest + 7 & (rest & ((1 ^ acc) - -6)))
        closure[0] += var12
        if acc == 0:
            return var12
        else:
            result = func5(acc - 1, var12)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
